services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - postgres
      - backend

  redis:
    image: redis:6.0
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis:/data
    networks:
      - postgres
      - backend


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore: 
            - node_modules/
    depends_on:
      - postgres
      - redis
    networks:
        - backend
        - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "8080:8080"
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /app
          ignore: 
            - node_modules/
    depends_on:
      - backend 
    networks:
      - backend
      - frontend 

networks:
  backend:
  frontend:
  postgres:

volumes:
  postgres_data:
  redis: